practical 1


Create table which imports a csv file tips.csv and perform the following queries:
1. print the highest bill
select * from 'tipsdb.tipstab' where bill = (select max(bill) from 'tipsdb.tipstab';

2.Print the number of smokers and non smokers
select smoker, count (*) from 'tipsdb.tipstab' group by smoker;

3.print the number of males and females
select gender, count(*) from 'tipsdb.tipstab' group by gender;

4.print the second highest tip
select min(tip) from 'tipsdb.tipstab' where tip in (select tip from 'tipsdb.tipstab' order by tip desc limit 2);

5.print the records of customers who are males and smokers
select * from 'tipsdb.tipstab' where gender = 'Male' and smoker=true;

6.print the second highest tip


7.Order the customer records by tip in the descending order
select * from 'tipsdb.tipstab' order by tip desc;

8.print the days when the customer paid the highest tip
select day, tip from 'tipsdb.tipstab' where tip=(select max(tip) from 'tipsdb.tipstab');

9.print the highest tip on the weekends
select day, max(tip) as 'highest tip' from 'tip.csv' where day in ('Sun','Sat') group by day:

10.print the days when the number of customers were more than 50.
select day from 'tips.csv' group by day having count(*)>50;

11.print the customers who are either females or non smokers
select * from 'tips.csv' where gender='Female' or smoker=false;

12.create tables student, course and teacher as enclosed in the assignment and perform queries on them.

create table student(
  roll int,
  name strint,
  address string,
  course_no string,
  semester string,
  grade string);

create table course(
  course_no string,
  course_name string,
  major string
);

create table teacher(
  emp_id int,
  emp_name string,
  course_no string,
  phone_no int,
  qualification string,
  salary int, doj string
);

insert into student values
(10,'Somya','MG road Goregaon',SC01,'5','A');

insert into course values
('SC01','BSc','Maths');

insert into teacher values
(10001,'Mr. Gomes', 'SC01',9082472646,'MSc','22-mar-2019');


13.Print the records of the students whose names start with S.
select * from student where name like 'S%';

14.print the students details where the names are at least 10 characters.
select * from student where lenght(name)=10;

15.print the student details who are enrolled in the course BSc
select roll,name,course_name from student inner join course on student.course_no=course.course_no
where course_name like '%BSc%';

16.display the details of teachers who earn a salary more than 50000.
select * from teacher where salary > 500000;


practical 2 hadoop

hadoop version

1.1. Start Linux terminal in GCP.
pwd

1.2. Print your Hadoop version.
hadoop version

1.3. Print the nodes which are running.
hdfs dfsadmin -report

1.4. Create a directory BIGDATA-rollno with your roll no  in HDFS.

hadoop fs -mkdir /BIGDATA-18
hadoop fs -ls /

1.5. Create a sub directory MYROLL_ROLLNO under BIGDATA-rollno

hadoop fs -mkdir /BIGDATA-18/MYROLL_ROLLNO
hadoop fs -ls /
hadoop fs -ls -R /

1.6. Create an empty file PRACTICAL-rollno.txt with your roll no
hadoop fs -touchz /BIGDATA-18/MYROLL_MYROLLNO/PRACTICAL-18.txt

1.7. Create a file called “Q1_PRACTICAL.txt” in
home\username\MYROLL_ROLLNO. Replace ROLLNO with your roll number. Create the following
content: “Hadoop File System was developed using distributed file system design.
It is run on commodity hardware. Unlike other distributed systems, HDFS is
highly fault tolerant and designed using low-cost hardware. HDFS holds very large amount of data and provides
easier access. To store such huge data, the files are stored across multiple
machines. These files are stored in redundant fashion to rescue the system from
possible data losses in case of failure. HDFS also makes applications available
to parallel processing.”

hadoop fs -appentToFile /../../../Q1_Practical.txt /../../../Practicl-18.txt
cat Practical-18.txt

 


1.8. Append the content from the local file “Q1_PRACTICAL.txt” to PRACTICAL-rollno.txt in HDFS.
hadoop fs -appendToFile /../../Q1_PRACTICAL.txt /BIGDATA-18/MYROLL_18/Practical-18.txt
hadoop fs -cat /BIGDATA-18/MYROLL_18/Practical-18.txt



1.9. View the content of HDFS with subfolders and files.
hadoop fs -ls -R /


1.10.Rename the existing file to “assignment-DS.txt”
hadoop fs -mv /BIGDATA-18/MYROLL_18/assigment-1.txt /BIGDATA-18/MYROLL_18/MYROLL_18/assigment-DS.txt

hadoop fs -ls -R /BIGDATA-18/MYROLL_18/assignment-DS.txt

hadoop fs -ls -R /BIGDATA-18
















